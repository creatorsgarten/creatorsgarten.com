---
import dayjs from 'dayjs'

import WikiLayout from '$layouts/wiki.astro'
import ContentRenderer from '$components/contentRenderer.astro'

import { getMarkdownFromSlug } from '$functions/getMarkdownFromSlug'

import type { EventFrontmatter } from '$types/EventFrontmatter'

let { eventId } = Astro.params

if (eventId === undefined) {
  const { rewrite } = await import('$functions/rewrite')
  return rewrite(404, `${Astro.url.origin}/404`)
}

const pageRef = `Events/${eventId}`
const markdown = await getMarkdownFromSlug<EventFrontmatter>(pageRef)

if (markdown === null) {
  const { rewrite } = await import('$functions/rewrite')
  return rewrite(404, `${Astro.url.origin}/404`)
}

const { rendered, lastModified, lastModifiedBy, frontMatter } = markdown
---

<WikiLayout
  title={frontMatter.name as string}
  contents={rendered!.headings}
  metadata={{
    edited: {
      at: dayjs(lastModified).toDate(),
      by: lastModifiedBy!.map(o => '@' + o).join(' '),
    },
  }}
  type="event"
  events={{
    id: eventId!,
    location: frontMatter.location,
    date: {
      from: dayjs(frontMatter.date).toDate(),
      to: frontMatter.endDate ? dayjs().toDate() : undefined,
    },
    hosts: frontMatter.hosts,
  }}
>
  <ContentRenderer content={rendered!.html} pageRef={pageRef} />
</WikiLayout>
